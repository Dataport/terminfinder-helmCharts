replicaCount: 1

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://terminfinder.opencode.local"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: selfsigned # More here: https://cert-manager.io/docs/configuration/selfsigned/#deployment
  hosts:
    # For this demo, we create a local dns entry (e.g. via /etc/hosts) and try it out with that
    # TODO: Change domain for your use-case
    - host: terminfinder.opencode.local
      paths:
        - path: /api(/|$)(.*)
          pathType: Prefix
  tls:
    - secretName: cert-terminfinder.opencode.local
      hosts:
        - terminfinder.opencode.local

# For testing, enabled the autoscaling
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# This is just for testing, since in minikube we cant run completely as non-root
postgresql:
  volumePermissions:
    enabled: false

  primary:
    ## Update permissions for the data folder
    initContainers:
      - name: update-permissions
        image: docker.io/busybox:latest
        imagePullPolicy: Always
        command:
          - "sh"
          - "-c"
          - "chown -R 1001:1001 /bitnami/postgresql && chmod -R 0700 /bitnami/postgresql"
        securityContext:
          runAsUser: 0
        volumeMounts:
          - name: data
            mountPath: /bitnami/postgresql
        resources:
          requests:
            memory: 64Mi
            cpu: 250m
          limits:
            memory: 64Mi
            cpu: 250m
