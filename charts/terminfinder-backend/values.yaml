# Default values for terminfinder-backend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  postgresql:
    auth:
      username: terminfinder
      database: terminfinder
      existingSecret: "" # if not set, default: "{{ Release.Name }}-postgres"

    service:
      name: "" # if not set, default: "{{ Release.Name }}-postgres"
      ports:
        postgresql: 5432 # Default port

replicaCount: 1

image:
  repository: registry.opencode.de/ig-bvc/demo-apps/terminfinder-sh/terminfinder-sh-backend
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext:
  runAsUser: 1000
  fsGroup: 2000
  runAsGroup: 3000

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: "nginx"
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # nginx.ingress.kubernetes.io/rewrite-target: /
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # cert-manager.io/cluster-issuer: letsencrypt-production
  hosts:
    - host: terminfinder.opencode.de
      paths:
        - path: /api
          pathType: Prefix
  tls: []
  #  - secretName: cert-terminfinder.opencode.de
  #    hosts:
  #      - terminfinder.de

resources:
  # We recommend to not use limits, since workload spikes can hinder the application or cause crashes
  # due to OOM errors. Read more about it here:
  # https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits?hl=en
  # limits:
  #   cpu: 800m
  #   memory: 256Mi
  requests:
    cpu: 400m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 20
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  enabled: true

  #architecture: standalone

  image:
    registry: docker.io # Notice, may this is not allowed
    repository: bitnami/postgresql
    image:
      tag: 12
    pullPolicy: IfNotPresent
    pullSecrets: []

  primary:
    initdb:
      # Enabling the UUID-OSSP
      scripts:
        99-enable-uuid.sql: |
          CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
          ALTER EXTENSION "uuid-ossp" SET SCHEMA public;

  # More variables / parameters can be found here:
  # https://github.com/bitnami/charts/tree/main/bitnami/postgresql#parameters
