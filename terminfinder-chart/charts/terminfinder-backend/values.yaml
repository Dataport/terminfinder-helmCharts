replicaCount: 1

image:
  repository: registry.opencode.de/dataport/terminfinder/terminfinder-backend
  pullPolicy: IfNotPresent
  tag: "0.1.0"

application:
  port: 8080
  useCors: true
  migrateDB: true

imagePullSecrets: [ ]

nameOverride: ""

fullnameOverride: ""

serviceAccount:
  create: true
  annotations: { }
  name: ""

podAnnotations: { }

podSecurityContext:
  runAsUser: 1000
  fsGroup: 2000
  runAsGroup: 3000

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/enable-cors: "true"
  hosts:
    - host: localhost
      port: 80
      paths:
        - path: /api(/|$)(.*)
          pathType: ImplementationSpecific
  tls: [ ]

resources:
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 500m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 20
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

externalDatabase:
  enabled: false
  address: null
  port: null
  database: null
  username: null
  existingSecret: null
  secretKeys:
    userPasswordKey: null

postgresql:
  enabled: true

  fullnameOverride: null

  auth:
    database: terminfinder
    username: terminfinder
    enablePostgresUser: false
    existingSecret: postgresql-default-auth
    secretKeys:
      userPasswordKey: password

  primary:
    persistence:
      enabled: true

    resources:
      requests:
        memory: 256Mi
        cpu: 250m
      limits:
        memory: 256Mi
        cpu: 250m

    initdb:
      scripts:
        99-enable-uuid.sql: |
          CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
          ALTER EXTENSION "uuid-ossp" SET SCHEMA public;

  readReplicas:
    replicaCount: 0
    persistence:
      enabled: false
